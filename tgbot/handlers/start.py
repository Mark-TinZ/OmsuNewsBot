import asyncio
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import CommandStart
from aiogram.fsm.state import StatesGroup, State

from tgbot.keyboard.InlineKeyboard import select_confirm_regisrer, select_role

start_router = Router()


# TODO: –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç –∫–ª–∞—Å—Å –≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –º–µ—Å—Ç–æ.
# –ú–∞—à–∏–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class StepsFormRegisterUser(StatesGroup):
    Get_Confirm = State()
    Get_role = State()
    Get_Course = State()
    Get_Group = State()

# –ö–æ–º–∞–Ω–¥–∞: /start
@start_router.message(CommandStart())
async def start(msg: Message, state: FSMContext) -> None:
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å? –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
    if not False:
        await msg.answer(f"""–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, <b>{msg.from_user.full_name}</b>! üòä

–Ø - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —É—á–µ–±–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π. –¢–µ–ø–µ—Ä—å —Ç—ã —Å–º–æ–∂–µ—à—å –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ä–∞—Ö –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è!

–ö—Ä–æ–º–µ —Ç–æ–≥–æ, —è —É–º–µ—é —Å—á–∏—Ç–∞—Ç—å –Ω–µ–¥–µ–ª–∏. –≠—Ç–æ –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æ, –µ—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å, –∫–∞–∫–∞—è –Ω–µ–¥–µ–ª—è —É—á–µ–±–Ω–∞—è, –∏–ª–∏ —Å–∫–æ–ª—å–∫–æ –Ω–µ–¥–µ–ª—å –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –∫–æ–Ω—Ü–∞ —Å–µ–º–µ—Å—Ç—Ä–∞.

–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ —Å–æ –º–Ω–æ–π —Ä–∞–±–æ—Ç–∞—Ç—å. –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è! ü§ñ""")
        await asyncio.sleep(1)
        await msg.answer(
            "–î–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç —Å–æ–±–∏—Ä–∞–µ—Ç –∏ —Ö—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ, –∫—É—Ä—Å–µ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ, —Ç–∞–∫ –∫–∞–∫ –±–µ–∑ —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –±–æ—Ç –Ω–µ —Å–º–æ–∂–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.",
            reply_markup=select_confirm_regisrer)
        await state.set_state(StepsFormRegisterUser.Get_Confirm)


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–∏–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥. —ç—Ç–∞–ø—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
@start_router.callback_query(F.data == "confirm")
async def get_confirm(call: CallbackQuery, state: FSMContext) -> None:
    await call.message.answer("""–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–∞–º –Ω—É–∂–Ω–æ
–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.

–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å:""", reply_markup=select_role)

# –§-—Ü–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞
@start_router.callback_query(F.data == "student")
async def get_student(call: CallbackQuery, state: FSMContext) -> None:
    await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:")